
   /*--------------------------------------------------------------------+
    |                              CSeed                                 |
    |--------------------------------------------------------------------|
    |                             macros.h                               |
    |--------------------------------------------------------------------|
    |                    First version: 14/01/2014                       |
    +--------------------------------------------------------------------+

 +--------------------------------------------------------------------------+
 |  / __)/ __)( ___)( ___)(  _ \                                            |
 | ( (__ \__ \ )__)  )__)  )(_) )      Chunky High-Level Compiler Seed      |
 |  \___)(___/(____)(____)(____/                                            |
 +--------------------------------------------------------------------------+
 | Copyright (C) 2014 University of Strasbourg                              |
 |                                                                          |
 | This library is free software; you can redistribute it and/or modify it  |
 | under the terms of the GNU Lesser General Public License as published by |
 | the Free Software Foundation; either version 2.1 of the License, or      |
 | (at your option) any later version.                                      |
 |                                                                          |
 | This library is distributed in the hope that it will be useful but       |
 | WITHOUT ANY WARRANTY; without even the implied warranty of               |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser  |
 | General Public License for more details.                                 |
 |                                                                          |
 | You should have received a copy of the GNU Lesser General Public License |
 | along with this software; if not, write to the Free Software Foundation, |
 | Inc., 51 Franklin Street, Fifth Floor,                                   |
 | Boston, MA  02110-1301  USA                                              |
 |                                                                          |
 | CSeed, the Chunky High-Level Compiler Seed                               |
 | Written by Cedric Bastoul, Cedric.Bastoul@unistra.fr                     |
 +--------------------------------------------------------------------------*/

/*--------------------------------------------------------------------------+
 | THIS FILE HAS BEEN AUTOMATICALLY GENERATED FROM macros.h.in BY configure |
 +--------------------------------------------------------------------------*/

#ifndef CSEED_MACROS_H
# define CSEED_MACROS_H

# define CSEED_VERSION                  "@PACKAGE_VERSION@"

# define CSEED_DEBUG			0
# define CSEED_TRUE			1
# define CSEED_FALSE			0

/*--------------------------------------------------------------------------+
 |                              UTILITY MACROS                              |
 +--------------------------------------------------------------------------*/

# define CSEED_info(msg)                                                    \
         do {                                                               \
           fprintf(stderr,"[CSeed] Info: "msg".\n");                        \
         } while (0)

# define CSEED_debug(msg)                                                   \
         do {                                                               \
           if (CSEED_DEBUG)                                                 \
             fprintf(stderr,"[CSeed] Debug: "msg" (%s).\n", __func__);      \
         } while (0)

# define CSEED_debug_call(function_call)                                    \
         do {                                                               \
           if (CSEED_DEBUG)                                                 \
             function_call;                                                 \
         } while (0)

# define CSEED_warning(msg)                                                 \
         do {                                                               \
           fprintf(stderr,"[CSeed] Warning: "msg" (%s).\n", __func__);      \
         } while (0)

# define CSEED_error(msg)                                                   \
         do {                                                               \
           fprintf(stderr,"[CSeed] Error: "msg" (%s).\n", __func__);        \
           exit(1);                                                         \
         } while (0)

# define CSEED_malloc(ptr, type, size)                                      \
         do {                                                               \
           if (((ptr) = (type)malloc(size)) == NULL)                        \
             CSEED_error("memory overflow");                                \
         } while (0)

# define CSEED_realloc(ptr, type, size)                                     \
         do {                                                               \
           if (((ptr) = (type)realloc(ptr, size)) == NULL)                  \
             CSEED_error("memory overflow");                                \
         } while (0)

# define CSEED_strdup(destination, source)                                  \
         do {                                                               \
           if (source != NULL) {                                            \
             if (((destination) = strdup(source)) == NULL)                  \
               CSEED_error("memory overflow");                              \
           }                                                                \
           else {                                                           \
             destination = NULL;                                            \
             CSEED_debug("strdup of a NULL string");                        \
           }                                                                \
         } while (0)

# define CSEED_max(x,y) ((x) > (y)? (x) : (y))

# define CSEED_min(x,y) ((x) < (y)? (x) : (y))

#endif /* define CSEED_MACROS_H */
